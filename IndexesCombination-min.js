function IndexesCombination(b,h,g){if(!(b instanceof Array)){throw"must supply maxes array."}this.getSize=function(){return b.length};var f=b.length-1;if(!(g instanceof Array)){g=new Array()}if(!(h instanceof Array)){h=new Array()}var e=1;for(var d=0;d<b.length;d++){if(b[d]<0){throw"maximum must be greater than zero."}if(typeof g[d]!=="number"||g[d]<0){g[d]=0}else{if(g[d]>b[d]){var c=g[d];g[d]=b[d];b[d]=c}}if(typeof h[d]!=="number"||h[d]<g[d]){h[d]=d===f?g[d]-1:g[d]}else{if(h[d]>b[d]){h[d]=b[d]}}e*=b[d]-g[d]+1}this.getTotal=function(){return e};this.reset=function(){for(var j=0;j<b.length;j++){h[j]=g[j]}};this.getMins=function(){var j=[];for(var k=0;k<b.length;k++){j[k]=g[k]}return j};this.getMaxes=function(){var j=[];for(var k=0;k<b.length;k++){j[k]=b[k]}return j};this.next=function(j){if(!(j instanceof Array)){throw"must supply a array to store indexes."}h[f]++;var k=b.length;for(var l=f;l>=0;l--){if(h[l]>b[l]){k=l-1;if(k>=0){h[k]++}else{break}}else{break}}if(k<0){return false}for(var l=k+1;l<b.length;l++){h[l]=g[l]}a(j);return true};function a(j){for(var k=0;k<b.length;k++){j[k]=h[k]}}this.getCurrentIndexes=function(i){if(!(i instanceof Array)){i=new Array()}a(i);return i};this.setCurrentIndexes=function(j){if(!(j instanceof Array)){throw"param must be a array"}for(var k=0;k<b.length;k++){if(j[k]>=g[k]&&j[k]<=b[k]){h[k]=j[k]}}};this.setIndexesAt=function(l,k,j,i){if(i>=0&&i<b.length&&k>=defMins[i]&&j>=0&&k<=j&&l>=k&&l<=j){h[i]=l}};this.getIndexAt=function(i){return h[i]}};
